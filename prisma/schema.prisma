// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {      
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model categories {
  id BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  name String @db.VarChar(100)
  user_id BigInt @db.UnsignedBigInt @unique
  created_at DateTime @default(now()) @db.Timestamp(0)
  updated_at DateTime @default(now()) @db.Timestamp(0)

  products products?

  users users @relation(fields: [user_id], references: [id])
}

model invoice_products{
  id BigInt @id @default(autoincrement())
  invoice_id BigInt @db.UnsignedBigInt @unique
  product_id BigInt @db.UnsignedBigInt @unique
  user_id BigInt @db.UnsignedBigInt @unique
  qty String @db.VarChar(50)
  sale_price String @db.VarChar(50)
  created_at DateTime @default(now()) @db.Timestamp(0)
  updated_at DateTime @default(now()) @db.Timestamp(0)

  products products @relation(fields: [product_id], references: [id])
  invoices invoices @relation(fields: [invoice_id], references: [id])
  users users @relation(fields: [user_id], references: [id])
}

model invoices {
  id BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  total String @db.VarChar(100)
  vat String @db.VarChar(100)
  payable String @db.VarChar(100)
  user_id BigInt @db.UnsignedBigInt @unique
  customer_id BigInt @db.UnsignedBigInt @unique
  created_at DateTime @default(now()) @db.Timestamp(0)
  updated_at DateTime @default(now()) @db.Timestamp(0)

  invoice_products invoice_products?

  users users @relation(fields: [user_id], references: [id])
  customers customers @relation(fields: [customer_id], references: [id])
}

model products {
  id BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  user_id BigInt @db.UnsignedBigInt @unique
  category_id BigInt @db.UnsignedBigInt @unique
  name String @db.VarChar(200)
  price String @db.VarChar(100)
  unit String @db.VarChar(100)
  img_url String @db.VarChar(300)
  created_at DateTime @default(now()) @db.Timestamp(0)
  updated_at DateTime @default(now()) @db.Timestamp(0)
 invoice_products invoice_products?

 categories categories @relation(fields: [category_id], references: [id])
 users users @relation(fields: [user_id], references: [id])
}

model users{
  id BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  firstName String @db.VarChar(50)
  lastName String @db.VarChar(50)
  email String @unique(map: "Email must be unique") @db.VarChar(50)
  mobile String @db.VarChar(30)
  password String @db.VarChar(255)
  otp String @db.VarChar(10)
  created_at DateTime @default(now()) @db.Timestamp(0)
  updated_at DateTime @default(now()) @db.Timestamp(0)

  invoice_products invoice_products?
  products products?
  categories categories?
  invoices invoices?
  customers customers?
}

model customers {
  id BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  name String @db.VarChar(50)
  email String @unique(map: "Email Address must be unique") @db.VarChar(50)
  mobile String @db.VarChar(50)
  user_id BigInt @db.UnsignedBigInt @unique
  created_at DateTime @default(now()) @db.Timestamp(0)
  updated_at DateTime @default(now()) @db.Timestamp(0)

  invoices invoices?

  users users @relation(fields: [user_id], references: [id])
}
